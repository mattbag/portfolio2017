{"version":3,"sources":["webpack:///component---src-pages-image-api-js-7f072f67d47c81dc3683.js","webpack:///./~/gatsby-image/index.js?e5b2*","webpack:///./src/pages/image-api.js"],"names":["webpackJsonp","40","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck2","_classCallCheck3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_objectWithoutProperties2","_objectWithoutProperties3","_extends2","_extends3","_react","_react2","_propTypes","_propTypes2","convertProps","props","convertedProps","responsiveResolution","resolutions","responsiveSizes","sizes","imageCache","inImageCache","src","io","listeners","window","IntersectionObserver","entries","forEach","entry","l","target","isIntersecting","unobserve","rootMargin","listenToIntersections","el","cb","observe","push","isWebpSupportedCache","isWebpSupported","elem","document","createElement","getContext","toDataURL","indexOf","Img","opacity","onLoad","_props$transitionDela","transitionDelay","undefined","otherProps","style","position","top","left","transition","width","height","objectFit","objectPosition","propTypes","number","string","func","Image","_React$Component","this","_this","call","isVisible","imgLoaded","IOSupported","seenBefore","state","handleRef","bind","prototype","ref","_this2","setState","render","_this3","_convertProps","title","alt","className","outerWrapperClassName","_convertProps$style","backgroundColor","bgColor","image","srcWebp","srcSetWebp","srcSet","zIndex","overflow","paddingBottom","aspectRatio","base64","tracedSVG","bottom","right","fadeIn","_image","divStyle","display","Component","defaultProps","object","bool","oneOfType","254","pageQuery","_gatsbyImage","_gatsbyImage2","_typography","assets","data","allContentfulAsset","edges","href","map","_ref","_ref$node","node","resize","key","marginRight","rhythm","marginBottom","border","background","padding","dangerouslySetInnerHTML","__html","_ref2","_ref2$node","_ref3","_ref3$node","resizing","_ref4","_ref4$node"],"mappings":"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","file":"component---src-pages-image-api-js-7f072f67d47c81dc3683.js","sourcesContent":["webpackJsonp([254165260642004],{\n\n/***/ 40:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _classCallCheck2 = __webpack_require__(24);\n\t\n\tvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\t\n\tvar _possibleConstructorReturn2 = __webpack_require__(29);\n\t\n\tvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\t\n\tvar _inherits2 = __webpack_require__(28);\n\t\n\tvar _inherits3 = _interopRequireDefault(_inherits2);\n\t\n\tvar _objectWithoutProperties2 = __webpack_require__(67);\n\t\n\tvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\t\n\tvar _extends2 = __webpack_require__(66);\n\t\n\tvar _extends3 = _interopRequireDefault(_extends2);\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(6);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Handle legacy names for image queries.\n\tvar convertProps = function convertProps(props) {\n\t  var convertedProps = (0, _extends3.default)({}, props);\n\t  if (convertedProps.responsiveResolution) {\n\t    convertedProps.resolutions = convertedProps.responsiveResolution;\n\t    delete convertedProps.responsiveResolution;\n\t  }\n\t  if (convertedProps.responsiveSizes) {\n\t    convertedProps.sizes = convertedProps.responsiveSizes;\n\t    delete convertedProps.responsiveSizes;\n\t  }\n\t\n\t  return convertedProps;\n\t};\n\t\n\t// Cache if we've seen an image before so we don't both with\n\t// lazy-loading & fading in on subsequent mounts.\n\tvar imageCache = {};\n\tvar inImageCache = function inImageCache(props) {\n\t  var convertedProps = convertProps(props);\n\t  // Find src\n\t  var src = convertedProps.sizes ? convertedProps.sizes.src : convertedProps.resolutions.src;\n\t\n\t  if (imageCache[src]) {\n\t    return true;\n\t  } else {\n\t    imageCache[src] = true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar io = void 0;\n\tvar listeners = [];\n\tif (typeof window !== \"undefined\" && window.IntersectionObserver) {\n\t  io = new window.IntersectionObserver(function (entries) {\n\t    entries.forEach(function (entry) {\n\t      listeners.forEach(function (l) {\n\t        if (l[0] === entry.target) {\n\t          if (entry.isIntersecting) {\n\t            io.unobserve(l[0]);\n\t            l[1]();\n\t          }\n\t        }\n\t      });\n\t    });\n\t  }, { rootMargin: \"200px\" });\n\t}\n\t\n\tvar listenToIntersections = function listenToIntersections(el, cb) {\n\t  io.observe(el);\n\t  listeners.push([el, cb]);\n\t};\n\t\n\tvar isWebpSupportedCache = null;\n\tvar isWebpSupported = function isWebpSupported() {\n\t  if (isWebpSupportedCache !== null) {\n\t    return isWebpSupportedCache;\n\t  }\n\t\n\t  var elem = typeof window !== \"undefined\" ? window.document.createElement(\"canvas\") : {};\n\t  if (elem.getContext && elem.getContext(\"2d\")) {\n\t    isWebpSupportedCache = elem.toDataURL(\"image/webp\").indexOf(\"data:image/webp\") === 0;\n\t  } else {\n\t    isWebpSupportedCache = false;\n\t  }\n\t\n\t  return isWebpSupportedCache;\n\t};\n\t\n\tvar Img = function Img(props) {\n\t  var opacity = props.opacity,\n\t      onLoad = props.onLoad,\n\t      _props$transitionDela = props.transitionDelay,\n\t      transitionDelay = _props$transitionDela === undefined ? \"\" : _props$transitionDela,\n\t      otherProps = (0, _objectWithoutProperties3.default)(props, [\"opacity\", \"onLoad\", \"transitionDelay\"]);\n\t\n\t  return _react2.default.createElement(\"img\", (0, _extends3.default)({}, otherProps, {\n\t    onLoad: onLoad,\n\t    style: {\n\t      position: \"absolute\",\n\t      top: 0,\n\t      left: 0,\n\t      transition: \"opacity 0.5s\",\n\t      transitionDelay: transitionDelay,\n\t      opacity: opacity,\n\t      width: \"100%\",\n\t      height: \"100%\",\n\t      objectFit: \"cover\",\n\t      objectPosition: \"center\"\n\t    }\n\t  }));\n\t};\n\t\n\tImg.propTypes = {\n\t  opacity: _propTypes2.default.number,\n\t  transitionDelay: _propTypes2.default.string,\n\t  onLoad: _propTypes2.default.func\n\t};\n\t\n\tvar Image = function (_React$Component) {\n\t  (0, _inherits3.default)(Image, _React$Component);\n\t\n\t  function Image(props) {\n\t    (0, _classCallCheck3.default)(this, Image);\n\t\n\t    // If this browser doesn't support the IntersectionObserver API\n\t    // we default to start downloading the image right away.\n\t    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));\n\t\n\t    var isVisible = true;\n\t    var imgLoaded = true;\n\t    var IOSupported = false;\n\t\n\t    // If this image has already been loaded before then we can assume it's\n\t    // already in the browser cache so it's cheap to just show directly.\n\t    var seenBefore = inImageCache(props);\n\t\n\t    if (!seenBefore && typeof window !== \"undefined\" && window.IntersectionObserver) {\n\t      isVisible = false;\n\t      imgLoaded = false;\n\t      IOSupported = true;\n\t    }\n\t\n\t    // Always don't render image while server rendering\n\t    if (typeof window === \"undefined\") {\n\t      isVisible = false;\n\t      imgLoaded = false;\n\t    }\n\t\n\t    _this.state = {\n\t      isVisible: isVisible,\n\t      imgLoaded: imgLoaded,\n\t      IOSupported: IOSupported\n\t    };\n\t\n\t    _this.handleRef = _this.handleRef.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  Image.prototype.handleRef = function handleRef(ref) {\n\t    var _this2 = this;\n\t\n\t    if (this.state.IOSupported && ref) {\n\t      listenToIntersections(ref, function () {\n\t        _this2.setState({ isVisible: true, imgLoaded: false });\n\t      });\n\t    }\n\t  };\n\t\n\t  Image.prototype.render = function render() {\n\t    var _this3 = this;\n\t\n\t    var _convertProps = convertProps(this.props),\n\t        title = _convertProps.title,\n\t        alt = _convertProps.alt,\n\t        className = _convertProps.className,\n\t        outerWrapperClassName = _convertProps.outerWrapperClassName,\n\t        _convertProps$style = _convertProps.style,\n\t        style = _convertProps$style === undefined ? {} : _convertProps$style,\n\t        sizes = _convertProps.sizes,\n\t        resolutions = _convertProps.resolutions,\n\t        backgroundColor = _convertProps.backgroundColor;\n\t\n\t    var bgColor = void 0;\n\t    if (typeof backgroundColor === \"boolean\") {\n\t      bgColor = \"lightgray\";\n\t    } else {\n\t      bgColor = backgroundColor;\n\t    }\n\t\n\t    if (sizes) {\n\t      var image = sizes;\n\t\n\t      // Use webp by default if browser supports it\n\t      if (image.srcWebp && image.srcSetWebp && isWebpSupported()) {\n\t        image.src = image.srcWebp;\n\t        image.srcSet = image.srcSetWebp;\n\t      }\n\t\n\t      // The outer div is necessary to reset the z-index to 0.\n\t      return _react2.default.createElement(\n\t        \"div\",\n\t        {\n\t          className: (outerWrapperClassName ? outerWrapperClassName : \"\") + \" gatsby-image-outer-wrapper\",\n\t          style: {\n\t            zIndex: 0,\n\t            // Let users set component to be absolutely positioned.\n\t            position: style.position === \"absolute\" ? \"initial\" : \"relative\"\n\t          }\n\t        },\n\t        _react2.default.createElement(\n\t          \"div\",\n\t          {\n\t            className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n\t            style: (0, _extends3.default)({\n\t              position: \"relative\",\n\t              overflow: \"hidden\",\n\t              zIndex: 1\n\t            }, style),\n\t            ref: this.handleRef\n\t          },\n\t          _react2.default.createElement(\"div\", {\n\t            style: {\n\t              width: \"100%\",\n\t              paddingBottom: 100 / image.aspectRatio + \"%\"\n\t            }\n\t          }),\n\t          image.base64 && _react2.default.createElement(Img, {\n\t            alt: alt,\n\t            title: title,\n\t            src: image.base64,\n\t            opacity: !this.state.imgLoaded ? 1 : 0,\n\t            transitionDelay: \"0.25s\"\n\t          }),\n\t          image.tracedSVG && _react2.default.createElement(Img, {\n\t            alt: alt,\n\t            title: title,\n\t            src: image.tracedSVG,\n\t            opacity: !this.state.imgLoaded ? 1 : 0,\n\t            transitionDelay: \"0.25s\"\n\t          }),\n\t          bgColor && _react2.default.createElement(\"div\", {\n\t            title: title,\n\t            style: {\n\t              backgroundColor: bgColor,\n\t              position: \"absolute\",\n\t              top: 0,\n\t              bottom: 0,\n\t              opacity: !this.state.imgLoaded ? 1 : 0,\n\t              transitionDelay: \"0.35s\",\n\t              right: 0,\n\t              left: 0\n\t            }\n\t          }),\n\t          this.state.isVisible && _react2.default.createElement(Img, {\n\t            alt: alt,\n\t            title: title,\n\t            srcSet: image.srcSet,\n\t            src: image.src,\n\t            sizes: image.sizes,\n\t            opacity: this.state.imgLoaded || this.props.fadeIn === false ? 1 : 0,\n\t            onLoad: function onLoad() {\n\t              return _this3.state.IOSupported && _this3.setState({ imgLoaded: true });\n\t            }\n\t          })\n\t        )\n\t      );\n\t    }\n\t\n\t    if (resolutions) {\n\t      var _image = resolutions;\n\t      var divStyle = (0, _extends3.default)({\n\t        position: \"relative\",\n\t        overflow: \"hidden\",\n\t        display: \"inline-block\",\n\t        zIndex: 1,\n\t        width: _image.width,\n\t        height: _image.height\n\t      }, style);\n\t\n\t      if (style.display === \"inherit\") {\n\t        delete divStyle.display;\n\t      }\n\t\n\t      // Use webp by default if browser supports it\n\t      if (_image.srcWebp && _image.srcSetWebp && isWebpSupported()) {\n\t        _image.src = _image.srcWebp;\n\t        _image.srcSet = _image.srcSetWebp;\n\t      }\n\t\n\t      // The outer div is necessary to reset the z-index to 0.\n\t      return _react2.default.createElement(\n\t        \"div\",\n\t        {\n\t          className: (outerWrapperClassName ? outerWrapperClassName : \"\") + \" gatsby-image-outer-wrapper\",\n\t          style: {\n\t            zIndex: 0,\n\t            // Let users set component to be absolutely positioned.\n\t            position: style.position === \"absolute\" ? \"initial\" : \"relative\"\n\t          }\n\t        },\n\t        _react2.default.createElement(\n\t          \"div\",\n\t          {\n\t            className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n\t            style: divStyle,\n\t            ref: this.handleRef\n\t          },\n\t          _image.base64 && _react2.default.createElement(Img, {\n\t            alt: alt,\n\t            title: title,\n\t            src: _image.base64,\n\t            opacity: !this.state.imgLoaded ? 1 : 0,\n\t            transitionDelay: \"0.35s\"\n\t          }),\n\t          _image.tracedSVG && _react2.default.createElement(Img, {\n\t            alt: alt,\n\t            title: title,\n\t            src: _image.tracedSVG,\n\t            opacity: !this.state.imgLoaded ? 1 : 0,\n\t            transitionDelay: \"0.25s\"\n\t          }),\n\t          bgColor && _react2.default.createElement(\"div\", {\n\t            title: title,\n\t            style: {\n\t              backgroundColor: bgColor,\n\t              width: _image.width,\n\t              opacity: !this.state.imgLoaded ? 1 : 0,\n\t              transitionDelay: \"0.25s\",\n\t              height: _image.height\n\t            }\n\t          }),\n\t          this.state.isVisible && _react2.default.createElement(Img, {\n\t            alt: alt,\n\t            title: title,\n\t            width: _image.width,\n\t            height: _image.height,\n\t            srcSet: _image.srcSet,\n\t            src: _image.src,\n\t            opacity: this.state.imgLoaded || this.props.fadeIn === false ? 1 : 0,\n\t            onLoad: function onLoad() {\n\t              return _this3.setState({ imgLoaded: true });\n\t            }\n\t          })\n\t        )\n\t      );\n\t    }\n\t\n\t    return null;\n\t  };\n\t\n\t  return Image;\n\t}(_react2.default.Component);\n\t\n\tImage.defaultProps = {\n\t  fadeIn: true,\n\t  alt: \"\"\n\t};\n\t\n\tImage.propTypes = {\n\t  responsiveResolution: _propTypes2.default.object,\n\t  responsiveSizes: _propTypes2.default.object,\n\t  resolutions: _propTypes2.default.object,\n\t  sizes: _propTypes2.default.object,\n\t  fadeIn: _propTypes2.default.bool,\n\t  title: _propTypes2.default.string,\n\t  alt: _propTypes2.default.string,\n\t  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]), // Support Glamor's css prop.\n\t  outerWrapperClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n\t  style: _propTypes2.default.object,\n\t  position: _propTypes2.default.string,\n\t  backgroundColor: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool])\n\t};\n\t\n\texports.default = Image;\n\n/***/ }),\n\n/***/ 254:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyImage = __webpack_require__(40);\n\t\n\tvar _gatsbyImage2 = _interopRequireDefault(_gatsbyImage);\n\t\n\tvar _typography = __webpack_require__(48);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (props) {\n\t  var assets = props.data.allContentfulAsset.edges;\n\t  return _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    _react2.default.createElement(\n\t      \"h1\",\n\t      null,\n\t      \"Image API examples\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"Gatsby offers rich integration with\",\n\t      \" \",\n\t      _react2.default.createElement(\n\t        \"a\",\n\t        { href: \"https://www.contentful.com/developers/docs/references/images-api/\" },\n\t        \"Contentful's Image API\"\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"Open Graph\",\n\t      _react2.default.createElement(\n\t        \"em\",\n\t        null,\n\t        \"i\"\n\t      ),\n\t      \"QL on your own site to experiment with the following options\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"h2\",\n\t      null,\n\t      \"Resize\"\n\t    ),\n\t    assets.map(function (_ref) {\n\t      var _ref$node = _ref.node,\n\t          title = _ref$node.title,\n\t          resize = _ref$node.resize;\n\t      return _react2.default.createElement(\"img\", {\n\t        key: resize.src,\n\t        alt: title,\n\t        src: resize.src,\n\t        width: resize.width,\n\t        height: resize.height,\n\t        style: {\n\t          marginRight: (0, _typography.rhythm)(1 / 2),\n\t          marginBottom: (0, _typography.rhythm)(1 / 2),\n\t          border: \"1px solid tomato\"\n\t        }\n\t      });\n\t    }),\n\t    _react2.default.createElement(\n\t      \"h4\",\n\t      null,\n\t      \"GraphQL query\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"pre\",\n\t      { style: { background: \"#efeded\", padding: (0, _typography.rhythm)(3 / 4) } },\n\t      _react2.default.createElement(\"code\", {\n\t        dangerouslySetInnerHTML: {\n\t          __html: \"{\\n  allContentfulAsset {\\n    edges {\\n      node {\\n        title\\n        resize(width: 100) {\\n          src\\n          width\\n          height\\n        }\\n      }\\n    }\\n  }\\n}\"\n\t        }\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      \"h2\",\n\t      null,\n\t      \"Responsive Resolution\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"If you make queries with \",\n\t      _react2.default.createElement(\n\t        \"code\",\n\t        null,\n\t        \"resolutions\"\n\t      ),\n\t      \" then Gatsby automatically generates images with 1x, 1.5x, 2x, and 3x versions so your images look great on whatever screen resolution of device they're on.\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"If you're on a retina class screen, notice how much sharper these images are than the above \\\"resized\\\" images.\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"You should prefer this operator over \",\n\t      _react2.default.createElement(\n\t        \"code\",\n\t        null,\n\t        \"resize\"\n\t      ),\n\t      \".\"\n\t    ),\n\t    assets.map(function (_ref2) {\n\t      var _ref2$node = _ref2.node,\n\t          title = _ref2$node.title,\n\t          resolutions = _ref2$node.resolutions;\n\t      return _react2.default.createElement(_gatsbyImage2.default, {\n\t        key: resolutions.src,\n\t        alt: title,\n\t        resolutions: resolutions,\n\t        backgroundColor: true,\n\t        style: {\n\t          marginRight: (0, _typography.rhythm)(1 / 2),\n\t          marginBottom: (0, _typography.rhythm)(1 / 2),\n\t          border: \"1px solid tomato\"\n\t        }\n\t      });\n\t    }),\n\t    _react2.default.createElement(\n\t      \"h4\",\n\t      null,\n\t      \"GraphQL query\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"pre\",\n\t      { style: { background: \"#efeded\", padding: (0, _typography.rhythm)(3 / 4) } },\n\t      _react2.default.createElement(\"code\", {\n\t        dangerouslySetInnerHTML: {\n\t          __html: \"{\\n  allContentfulAsset {\\n    edges {\\n      node {\\n        title\\n        resolutions(width: 100) {\\n          width\\n          height\\n          src\\n          srcSet\\n        }\\n      }\\n    }\\n  }\\n}\"\n\t        }\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      \"h2\",\n\t      null,\n\t      \"Resizing\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"On both resize and resolutions you can also add a\",\n\t      \" \",\n\t      _react2.default.createElement(\n\t        \"code\",\n\t        null,\n\t        \"height\"\n\t      ),\n\t      \" \",\n\t      \"argument to the GraphQL argument to crop the image to a certain size.\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"You can also set the\",\n\t      \" \",\n\t      _react2.default.createElement(\n\t        \"a\",\n\t        { href: \"https://www.contentful.com/developers/docs/references/images-api/#/reference/resizing-&-cropping/change-the-resizing-behavior\" },\n\t        \"resizing behavior\"\n\t      ),\n\t      \" \",\n\t      \"and\",\n\t      \" \",\n\t      _react2.default.createElement(\n\t        \"a\",\n\t        { href: \"https://www.contentful.com/developers/docs/references/images-api/#/reference/resizing-&-cropping/specify-focus-area-for-resizing\" },\n\t        \"resizing focus area\"\n\t      )\n\t    ),\n\t    assets.map(function (_ref3) {\n\t      var _ref3$node = _ref3.node,\n\t          title = _ref3$node.title,\n\t          resizing = _ref3$node.resizing;\n\t      return _react2.default.createElement(_gatsbyImage2.default, {\n\t        key: resizing.src,\n\t        alt: title,\n\t        resolutions: resizing,\n\t        style: {\n\t          marginRight: (0, _typography.rhythm)(1 / 2),\n\t          marginBottom: (0, _typography.rhythm)(1 / 2),\n\t          border: \"1px solid tomato\"\n\t        }\n\t      });\n\t    }),\n\t    _react2.default.createElement(\n\t      \"h4\",\n\t      null,\n\t      \"GraphQL query\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"pre\",\n\t      { style: { background: \"#efeded\", padding: (0, _typography.rhythm)(3 / 4) } },\n\t      _react2.default.createElement(\"code\", {\n\t        dangerouslySetInnerHTML: {\n\t          __html: \"{\\n  allContentfulAsset {\\n    edges {\\n      node {\\n        title\\n        resolutions(width: 100, height: 100) {\\n          width\\n          height\\n          src\\n          srcSet\\n        }\\n      }\\n    }\\n  }\\n}\"\n\t        }\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      \"h2\",\n\t      null,\n\t      \"Responsive Sizes\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"This GraphQL option allows you to generate responsive images that automatically respond to different device screen resolution and widths. E.g. a smartphone browser will download a much smaller image than a desktop device.\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"Instead of specifying a width and height, with sizes you specify a\",\n\t      \" \",\n\t      _react2.default.createElement(\n\t        \"code\",\n\t        null,\n\t        \"maxWidth\"\n\t      ),\n\t      \", the max width the container of the images reaches.\"\n\t    ),\n\t    assets.map(function (_ref4) {\n\t      var _ref4$node = _ref4.node,\n\t          title = _ref4$node.title,\n\t          sizes = _ref4$node.sizes;\n\t      return _react2.default.createElement(_gatsbyImage2.default, {\n\t        key: sizes.src,\n\t        alt: title,\n\t        sizes: sizes,\n\t        style: {\n\t          marginRight: (0, _typography.rhythm)(1 / 2),\n\t          marginBottom: (0, _typography.rhythm)(1 / 2),\n\t          border: \"1px solid tomato\"\n\t        }\n\t      });\n\t    }),\n\t    _react2.default.createElement(\n\t      \"h4\",\n\t      null,\n\t      \"GraphQL query\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"pre\",\n\t      { style: { background: \"#efeded\", padding: (0, _typography.rhythm)(3 / 4) } },\n\t      _react2.default.createElement(\"code\", {\n\t        dangerouslySetInnerHTML: {\n\t          __html: \"{\\n  allContentfulAsset {\\n    edges {\\n      node {\\n        title\\n        sizes(maxWidth: 613) {\\n          sizes\\n          src\\n          srcSet\\n        }\\n      }\\n    }\\n  }\\n}\"\n\t        }\n\t      })\n\t    )\n\t  );\n\t};\n\t\n\tvar pageQuery = exports.pageQuery = \"** extracted graphql fragment **\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-image-api-js-7f072f67d47c81dc3683.js","\"use strict\";\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _objectWithoutProperties2 = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Handle legacy names for image queries.\nvar convertProps = function convertProps(props) {\n  var convertedProps = (0, _extends3.default)({}, props);\n  if (convertedProps.responsiveResolution) {\n    convertedProps.resolutions = convertedProps.responsiveResolution;\n    delete convertedProps.responsiveResolution;\n  }\n  if (convertedProps.responsiveSizes) {\n    convertedProps.sizes = convertedProps.responsiveSizes;\n    delete convertedProps.responsiveSizes;\n  }\n\n  return convertedProps;\n};\n\n// Cache if we've seen an image before so we don't both with\n// lazy-loading & fading in on subsequent mounts.\nvar imageCache = {};\nvar inImageCache = function inImageCache(props) {\n  var convertedProps = convertProps(props);\n  // Find src\n  var src = convertedProps.sizes ? convertedProps.sizes.src : convertedProps.resolutions.src;\n\n  if (imageCache[src]) {\n    return true;\n  } else {\n    imageCache[src] = true;\n    return false;\n  }\n};\n\nvar io = void 0;\nvar listeners = [];\nif (typeof window !== \"undefined\" && window.IntersectionObserver) {\n  io = new window.IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      listeners.forEach(function (l) {\n        if (l[0] === entry.target) {\n          if (entry.isIntersecting) {\n            io.unobserve(l[0]);\n            l[1]();\n          }\n        }\n      });\n    });\n  }, { rootMargin: \"200px\" });\n}\n\nvar listenToIntersections = function listenToIntersections(el, cb) {\n  io.observe(el);\n  listeners.push([el, cb]);\n};\n\nvar isWebpSupportedCache = null;\nvar isWebpSupported = function isWebpSupported() {\n  if (isWebpSupportedCache !== null) {\n    return isWebpSupportedCache;\n  }\n\n  var elem = typeof window !== \"undefined\" ? window.document.createElement(\"canvas\") : {};\n  if (elem.getContext && elem.getContext(\"2d\")) {\n    isWebpSupportedCache = elem.toDataURL(\"image/webp\").indexOf(\"data:image/webp\") === 0;\n  } else {\n    isWebpSupportedCache = false;\n  }\n\n  return isWebpSupportedCache;\n};\n\nvar Img = function Img(props) {\n  var opacity = props.opacity,\n      onLoad = props.onLoad,\n      _props$transitionDela = props.transitionDelay,\n      transitionDelay = _props$transitionDela === undefined ? \"\" : _props$transitionDela,\n      otherProps = (0, _objectWithoutProperties3.default)(props, [\"opacity\", \"onLoad\", \"transitionDelay\"]);\n\n  return _react2.default.createElement(\"img\", (0, _extends3.default)({}, otherProps, {\n    onLoad: onLoad,\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      transition: \"opacity 0.5s\",\n      transitionDelay: transitionDelay,\n      opacity: opacity,\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    }\n  }));\n};\n\nImg.propTypes = {\n  opacity: _propTypes2.default.number,\n  transitionDelay: _propTypes2.default.string,\n  onLoad: _propTypes2.default.func\n};\n\nvar Image = function (_React$Component) {\n  (0, _inherits3.default)(Image, _React$Component);\n\n  function Image(props) {\n    (0, _classCallCheck3.default)(this, Image);\n\n    // If this browser doesn't support the IntersectionObserver API\n    // we default to start downloading the image right away.\n    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));\n\n    var isVisible = true;\n    var imgLoaded = true;\n    var IOSupported = false;\n\n    // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n    var seenBefore = inImageCache(props);\n\n    if (!seenBefore && typeof window !== \"undefined\" && window.IntersectionObserver) {\n      isVisible = false;\n      imgLoaded = false;\n      IOSupported = true;\n    }\n\n    // Always don't render image while server rendering\n    if (typeof window === \"undefined\") {\n      isVisible = false;\n      imgLoaded = false;\n    }\n\n    _this.state = {\n      isVisible: isVisible,\n      imgLoaded: imgLoaded,\n      IOSupported: IOSupported\n    };\n\n    _this.handleRef = _this.handleRef.bind(_this);\n    return _this;\n  }\n\n  Image.prototype.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.state.IOSupported && ref) {\n      listenToIntersections(ref, function () {\n        _this2.setState({ isVisible: true, imgLoaded: false });\n      });\n    }\n  };\n\n  Image.prototype.render = function render() {\n    var _this3 = this;\n\n    var _convertProps = convertProps(this.props),\n        title = _convertProps.title,\n        alt = _convertProps.alt,\n        className = _convertProps.className,\n        outerWrapperClassName = _convertProps.outerWrapperClassName,\n        _convertProps$style = _convertProps.style,\n        style = _convertProps$style === undefined ? {} : _convertProps$style,\n        sizes = _convertProps.sizes,\n        resolutions = _convertProps.resolutions,\n        backgroundColor = _convertProps.backgroundColor;\n\n    var bgColor = void 0;\n    if (typeof backgroundColor === \"boolean\") {\n      bgColor = \"lightgray\";\n    } else {\n      bgColor = backgroundColor;\n    }\n\n    if (sizes) {\n      var image = sizes;\n\n      // Use webp by default if browser supports it\n      if (image.srcWebp && image.srcSetWebp && isWebpSupported()) {\n        image.src = image.srcWebp;\n        image.srcSet = image.srcSetWebp;\n      }\n\n      // The outer div is necessary to reset the z-index to 0.\n      return _react2.default.createElement(\n        \"div\",\n        {\n          className: (outerWrapperClassName ? outerWrapperClassName : \"\") + \" gatsby-image-outer-wrapper\",\n          style: {\n            zIndex: 0,\n            // Let users set component to be absolutely positioned.\n            position: style.position === \"absolute\" ? \"initial\" : \"relative\"\n          }\n        },\n        _react2.default.createElement(\n          \"div\",\n          {\n            className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n            style: (0, _extends3.default)({\n              position: \"relative\",\n              overflow: \"hidden\",\n              zIndex: 1\n            }, style),\n            ref: this.handleRef\n          },\n          _react2.default.createElement(\"div\", {\n            style: {\n              width: \"100%\",\n              paddingBottom: 100 / image.aspectRatio + \"%\"\n            }\n          }),\n          image.base64 && _react2.default.createElement(Img, {\n            alt: alt,\n            title: title,\n            src: image.base64,\n            opacity: !this.state.imgLoaded ? 1 : 0,\n            transitionDelay: \"0.25s\"\n          }),\n          image.tracedSVG && _react2.default.createElement(Img, {\n            alt: alt,\n            title: title,\n            src: image.tracedSVG,\n            opacity: !this.state.imgLoaded ? 1 : 0,\n            transitionDelay: \"0.25s\"\n          }),\n          bgColor && _react2.default.createElement(\"div\", {\n            title: title,\n            style: {\n              backgroundColor: bgColor,\n              position: \"absolute\",\n              top: 0,\n              bottom: 0,\n              opacity: !this.state.imgLoaded ? 1 : 0,\n              transitionDelay: \"0.35s\",\n              right: 0,\n              left: 0\n            }\n          }),\n          this.state.isVisible && _react2.default.createElement(Img, {\n            alt: alt,\n            title: title,\n            srcSet: image.srcSet,\n            src: image.src,\n            sizes: image.sizes,\n            opacity: this.state.imgLoaded || this.props.fadeIn === false ? 1 : 0,\n            onLoad: function onLoad() {\n              return _this3.state.IOSupported && _this3.setState({ imgLoaded: true });\n            }\n          })\n        )\n      );\n    }\n\n    if (resolutions) {\n      var _image = resolutions;\n      var divStyle = (0, _extends3.default)({\n        position: \"relative\",\n        overflow: \"hidden\",\n        display: \"inline-block\",\n        zIndex: 1,\n        width: _image.width,\n        height: _image.height\n      }, style);\n\n      if (style.display === \"inherit\") {\n        delete divStyle.display;\n      }\n\n      // Use webp by default if browser supports it\n      if (_image.srcWebp && _image.srcSetWebp && isWebpSupported()) {\n        _image.src = _image.srcWebp;\n        _image.srcSet = _image.srcSetWebp;\n      }\n\n      // The outer div is necessary to reset the z-index to 0.\n      return _react2.default.createElement(\n        \"div\",\n        {\n          className: (outerWrapperClassName ? outerWrapperClassName : \"\") + \" gatsby-image-outer-wrapper\",\n          style: {\n            zIndex: 0,\n            // Let users set component to be absolutely positioned.\n            position: style.position === \"absolute\" ? \"initial\" : \"relative\"\n          }\n        },\n        _react2.default.createElement(\n          \"div\",\n          {\n            className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n            style: divStyle,\n            ref: this.handleRef\n          },\n          _image.base64 && _react2.default.createElement(Img, {\n            alt: alt,\n            title: title,\n            src: _image.base64,\n            opacity: !this.state.imgLoaded ? 1 : 0,\n            transitionDelay: \"0.35s\"\n          }),\n          _image.tracedSVG && _react2.default.createElement(Img, {\n            alt: alt,\n            title: title,\n            src: _image.tracedSVG,\n            opacity: !this.state.imgLoaded ? 1 : 0,\n            transitionDelay: \"0.25s\"\n          }),\n          bgColor && _react2.default.createElement(\"div\", {\n            title: title,\n            style: {\n              backgroundColor: bgColor,\n              width: _image.width,\n              opacity: !this.state.imgLoaded ? 1 : 0,\n              transitionDelay: \"0.25s\",\n              height: _image.height\n            }\n          }),\n          this.state.isVisible && _react2.default.createElement(Img, {\n            alt: alt,\n            title: title,\n            width: _image.width,\n            height: _image.height,\n            srcSet: _image.srcSet,\n            src: _image.src,\n            opacity: this.state.imgLoaded || this.props.fadeIn === false ? 1 : 0,\n            onLoad: function onLoad() {\n              return _this3.setState({ imgLoaded: true });\n            }\n          })\n        )\n      );\n    }\n\n    return null;\n  };\n\n  return Image;\n}(_react2.default.Component);\n\nImage.defaultProps = {\n  fadeIn: true,\n  alt: \"\"\n};\n\nImage.propTypes = {\n  responsiveResolution: _propTypes2.default.object,\n  responsiveSizes: _propTypes2.default.object,\n  resolutions: _propTypes2.default.object,\n  sizes: _propTypes2.default.object,\n  fadeIn: _propTypes2.default.bool,\n  title: _propTypes2.default.string,\n  alt: _propTypes2.default.string,\n  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]), // Support Glamor's css prop.\n  outerWrapperClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  style: _propTypes2.default.object,\n  position: _propTypes2.default.string,\n  backgroundColor: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool])\n};\n\nexports.default = Image;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-image/index.js\n// module id = 40\n// module chunks = 35783957827783 110308036455227 254165260642004","import React from \"react\"\nimport Img from \"gatsby-image\"\nimport { rhythm } from \"../utils/typography\"\n\nexport default props => {\n  const assets = props.data.allContentfulAsset.edges\n  return (\n    <div>\n      <h1>Image API examples</h1>\n      <p>\n        Gatsby offers rich integration with{` `}\n        <a href=\"https://www.contentful.com/developers/docs/references/images-api/\">\n          Contentful's Image API\n        </a>\n      </p>\n      <p>\n        Open Graph<em>i</em>QL on your own site to experiment with the following\n        options\n      </p>\n      <h2>Resize</h2>\n      {assets.map(({ node: { title, resize } }) => (\n        <img\n          key={resize.src}\n          alt={title}\n          src={resize.src}\n          width={resize.width}\n          height={resize.height}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: rhythm(1 / 2),\n            border: `1px solid tomato`,\n          }}\n        />\n      ))}\n      <h4>GraphQL query</h4>\n      <pre style={{ background: `#efeded`, padding: rhythm(3 / 4) }}>\n        <code\n          dangerouslySetInnerHTML={{\n            __html: `{\n  allContentfulAsset {\n    edges {\n      node {\n        title\n        resize(width: 100) {\n          src\n          width\n          height\n        }\n      }\n    }\n  }\n}`,\n          }}\n        />\n      </pre>\n\n      <h2>Responsive Resolution</h2>\n      <p>\n        If you make queries with <code>resolutions</code> then Gatsby\n        automatically generates images with 1x, 1.5x, 2x, and 3x versions so\n        your images look great on whatever screen resolution of device they're\n        on.\n      </p>\n      <p>\n        If you're on a retina class screen, notice how much sharper these images\n        are than the above \"resized\" images.\n      </p>\n      <p>\n        You should prefer this operator over <code>resize</code>.\n      </p>\n      {assets.map(({ node: { title, resolutions } }) => (\n        <Img\n          key={resolutions.src}\n          alt={title}\n          resolutions={resolutions}\n          backgroundColor\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: rhythm(1 / 2),\n            border: `1px solid tomato`,\n          }}\n        />\n      ))}\n      <h4>GraphQL query</h4>\n      <pre style={{ background: `#efeded`, padding: rhythm(3 / 4) }}>\n        <code\n          dangerouslySetInnerHTML={{\n            __html: `{\n  allContentfulAsset {\n    edges {\n      node {\n        title\n        resolutions(width: 100) {\n          width\n          height\n          src\n          srcSet\n        }\n      }\n    }\n  }\n}`,\n          }}\n        />\n      </pre>\n\n      <h2>Resizing</h2>\n      <p>\n        On both resize and resolutions you can also add a{` `}\n        <code>height</code>\n        {` `}\n        argument to the GraphQL argument to crop the image to a certain size.\n      </p>\n      <p>\n        You can also set the{` `}\n        <a href=\"https://www.contentful.com/developers/docs/references/images-api/#/reference/resizing-&-cropping/change-the-resizing-behavior\">\n          resizing behavior\n        </a>\n        {` `}\n        and{` `}\n        <a href=\"https://www.contentful.com/developers/docs/references/images-api/#/reference/resizing-&-cropping/specify-focus-area-for-resizing\">\n          resizing focus area\n        </a>\n      </p>\n      {assets.map(({ node: { title, resizing } }) => (\n        <Img\n          key={resizing.src}\n          alt={title}\n          resolutions={resizing}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: rhythm(1 / 2),\n            border: `1px solid tomato`,\n          }}\n        />\n      ))}\n      <h4>GraphQL query</h4>\n      <pre style={{ background: `#efeded`, padding: rhythm(3 / 4) }}>\n        <code\n          dangerouslySetInnerHTML={{\n            __html: `{\n  allContentfulAsset {\n    edges {\n      node {\n        title\n        resolutions(width: 100, height: 100) {\n          width\n          height\n          src\n          srcSet\n        }\n      }\n    }\n  }\n}`,\n          }}\n        />\n      </pre>\n\n      <h2>Responsive Sizes</h2>\n      <p>\n        This GraphQL option allows you to generate responsive images that\n        automatically respond to different device screen resolution and widths.\n        E.g. a smartphone browser will download a much smaller image than a\n        desktop device.\n      </p>\n      <p>\n        Instead of specifying a width and height, with sizes you specify a{` `}\n        <code>maxWidth</code>, the max width the container of the images\n        reaches.\n      </p>\n      {assets.map(({ node: { title, sizes } }) => (\n        <Img\n          key={sizes.src}\n          alt={title}\n          sizes={sizes}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: rhythm(1 / 2),\n            border: `1px solid tomato`,\n          }}\n        />\n      ))}\n      <h4>GraphQL query</h4>\n      <pre style={{ background: `#efeded`, padding: rhythm(3 / 4) }}>\n        <code\n          dangerouslySetInnerHTML={{\n            __html: `{\n  allContentfulAsset {\n    edges {\n      node {\n        title\n        sizes(maxWidth: 613) {\n          sizes\n          src\n          srcSet\n        }\n      }\n    }\n  }\n}`,\n          }}\n        />\n      </pre>\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ImageAPIExamples {\n    allContentfulAsset(filter: { node_locale: { eq: \"en-US\" } }) {\n      edges {\n        node {\n          title\n          resize(width: 100) {\n            src\n            width\n            height\n          }\n          resolutions(width: 100) {\n            ...GatsbyContentfulResolutions_noBase64\n          }\n          resizing: resolutions(width: 100, height: 100) {\n            ...GatsbyContentfulResolutions_noBase64\n          }\n          sizes(maxWidth: 613) {\n            ...GatsbyContentfulSizes_noBase64\n          }\n        }\n      }\n    }\n  }\n`\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/image-api.js"],"sourceRoot":""}